"""
TESTS is a dict with all you tests.
Keys for this will be categories' names.
Each test is dict with
    "input" -- input data for user function
    "answer" -- your right answer
    "explanation" -- not necessary key, it's using for additional info in animation.
"""

TESTS = {
    "Basic": [
        {'answer': True, 'input': ((2, -70, 96), (-98, 25, 96), (74, -2, 96), (58, 48, 96))},
        {'answer': True, 'input': ((-92, -41, 0), (-16, -29, 0), (82, 59, 0), (67, 28, 0))},
        {'answer': True, 'input': ((-78, 31, 81), (-99, 55, 81), (45, 75, 81), (-12, 46, 81))},
        {'answer': True, 'input': ((75, -87, -91), (-59, 42, -91), (38, -84, -91), (63, 10, -91))},
        {'answer': False, 'input': ((75, -43, -22), (-56, -22, 33), (93, -77, -92), (47, -20, -41))},
        {'answer': True, 'input': ((-3, 78, -87), (-93, -67, -87), (-93, 53, -87), (40, 73, -87))},
        {'answer': False, 'input': ((19, -22, -5), (-61, 73, 82), (79, 9, 66), (96, 78, 84))},
        {'answer': True, 'input': ((62, -31, -90), (26, 88, -90), (-7, 70, -90), (-75, 92, -90))},
        {'answer': False, 'input': ((15, -94, -7), (15, -91, -95), (-48, 79, -6), (-20, -63, 33))},
        {'answer': False, 'input': ((-12, -32, 24), (86, -12, 48), (-17, -56, 49), (29, -15, 21))},
        {'answer': False, 'input': ((-54, 25, -52), (49, -95, 80), (72, -76, -87), (-27, 18, -12))},
        {'answer': True, 'input': ((13, 65, 26), (-88, -91, 26), (51, 35, 26), (91, 55, 26))},
        {'answer': False, 'input': ((-55, -91, 84), (-95, 29, 30), (46, -48, -99), (100, 76, 67))},
        {'answer': False, 'input': ((-5, -84, 63), (-70, 34, 19), (-65, 61, -82), (-34, 40, -49))},
        {'answer': True, 'input': ((-93, -15, 78), (72, -26, 78), (-14, -59, 78), (42, -54, 78))},
        {'answer': True, 'input': ((-68, -80, 84), (53, 24, 84), (0, -28, 84), (92, 35, 84))},
        {'answer': False, 'input': ((28, -97, 18), (55, -94, -82), (16, 53, 45), (-78, 22, 67))},
        {'answer': False, 'input': ((5, 27, -1), (-42, -23, 21), (19, 30, 96), (-50, -97, -56))},
        {'answer': True, 'input': ((27, -20, 79), (-100, -6, 79), (-11, 86, 79), (15, 16, 79))},
        {'answer': False, 'input': ((13, -47, 73), (18, 97, 54), (66, 35, 84), (-74, 14, 5))},
        {'answer': True, 'input': ((-21, 39, 87), (90, 42, 87), (34, 58, 87), (88, 69, 87))},
        {'answer': False, 'input': ((16, 92, -52), (61, 34, -71), (-6, 74, 31), (-12, -89, 74))},
        {'answer': True, 'input': ((-55, -95, -65), (-19, -66, -65), (21, -86, -65), (98, 25, -65))},
        {'answer': False, 'input': ((2, -19, 30), (21, -12, -96), (66, 88, -39), (-17, -8, 22))},
        {'answer': True, 'input': ((79, -78, 67), (-86, -33, 67), (-34, -90, 67), (-21, -80, 67))},
        {'answer': False, 'input': ((-83, -82, 57), (58, 32, -45), (18, 91, 99), (-39, 75, 0))},
        {'answer': False, 'input': ((-77, 47, -54), (28, 26, 67), (51, 61, 96), (-17, 33, 51))},
        {'answer': True, 'input': ((100, 92, -34), (-97, 86, -34), (-47, 48, -34), (10, -8, -34))},
        {'answer': True, 'input': ((10, -50, -79), (28, -74, -79), (0, 63, -79), (-83, -94, -79))},
        {'answer': False, 'input': ((-22, -54, 5), (-8, 76, 75), (57, -26, -31), (-30, -75, -84))}
    ]
}
